name: CI/CD TestRun

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v3

      - name: Set-Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install black colorama flake8 isort mypy pylint

      - name: Run Import formatter
        run: isort . pyproject.toml --check --diff --only-modified

      - name: Run Code formatter
        run: black . --check --diff

      - name: Analysing the code with pylint
        run: pylint $(git ls-files '*.py')

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics

  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.12" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set-Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Test
        run: pytest
