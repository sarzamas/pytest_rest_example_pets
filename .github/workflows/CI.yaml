name: CI/CD TestRun

env:
  PYTHON_VERSION: "3.12"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read

jobs:

  clear_logs:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3

      - name: Clear previous sessions logs
        run: |
          ./.github/delete-logs.sh sarzamas/pytest_rest_example_pets CI.yaml
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

  build:
    runs-on: ubuntu-latest
    needs: clear_logs

    strategy:
      matrix:
        python-version: [ "3.12" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set-Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black colorama flake8 isort mypy pylint

      - name: Run Import formatter
        run: isort . pyproject.toml --check --diff --only-modified

      - name: Run Code formatter
        run: black . --check --diff

      - name: Analysing the code with pylint
        run: pylint $(git ls-files '*.py')

      - name: Lint with flake8
        run: |
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=120 --statistics
          # stop the build if there are Python syntax errors or undefined names
          # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

  test:
    runs-on: ubuntu-latest
    needs: clear_logs

    strategy:
      matrix:
        python-version: [ "3.12" ]

    steps:
      - uses: actions/checkout@v3

      - name: Set-Up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Display Python version
        run: python -c "import sys; print(sys.version)"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run Test with pytest
        run: pytest --junitxml=report.xml

      - name: Archive TestRun results
        uses: actions/upload-artifact@v3
        with:
          name: TestRun report
          path: ./report.xml
          retention-days: 5
