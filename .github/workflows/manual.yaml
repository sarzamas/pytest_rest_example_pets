name: Manual TestRun
run-name: 🚀🧐🚀 Only Tests (on demand) 🚀🧐🚀

# Workflow runs when manually triggered using the UI or API
on:
  workflow_dispatch:
    # Inputs the workflow accepts
    inputs:
      field:
        # Prompt to be shown in the UI
        description: Push to Start...
        # Default value if no value is explicitly provided
        default: ⬇️ Push button below to Run Test! ⬇️
        # Input has to be provided for the workflow to run
        required: false
        # The data type of the input
        type: string

concurrency:
  group: ${{ github.actor }} || Manual TestRun
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  test:
    name: TestRun Summary
    env:
      OS_TEXT: The operating system on the runner is
    runs-on: ubuntu-latest

    steps:
      - name: Check out repo ${{ github.repository }}
        uses: actions/checkout@v4

      - name: Set-Up Python
        uses: actions/setup-python@v4
        with:
          # Read python version from a file
          python-version-file: pyproject.toml
          check-latest: true
          architecture: x64

      - name: Display Python version
        id: store
        run: |
          echo "$OS_TEXT $RUNNER_OS"
          echo "version=$(python --version | tr ' ' '-')" >> $GITHUB_OUTPUT
          python -c "import sys; print(f'🎌 Python-{sys.version}')"
      - run: echo ${{ steps.store.outputs.version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip setuptools wheel
          if [ -f requirements.txt ]; then pip wheel -r requirements.txt; fi

      - name: Hello! TestRun Report is below...
        run: |
          echo "Hello, Starting tests..."
          echo ${{ inputs.field }}

      - name: Run Test with pytest
        id: testrun
        env:
          REPORT_PATH: TestRun-report-${{ steps.store.outputs.version }}.xml
        run: |
          pytest $(echo "--junit-xml=$REPORT_PATH")
          echo "path=$(echo $REPORT_PATH)" >> $GITHUB_OUTPUT

      - name: Archive TestRun results
        id: artifact
        uses: actions/upload-artifact@v4
        with:
          name: TestRun report
          path: ${{ steps.testrun.outputs.path }}
          if-no-files-found: error
          compression-level: 0
          retention-days: 5
      - name: Artifact ID is ${{ env.ID }}
        env:
          ID: ${{ steps.artifact.outputs.artifact-id }}
        run: echo $ID
